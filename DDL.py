from asyncio import sleep

from pyrogram import Client, types, errors
from .. import loader, utils, inline, database, fsm, __version__

@loader.module(name="DownVideo", author="ecXbe")
class DdlMod(loader.Module):
  
  """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Å —é—Ç—É–±–∞ –∏ —Ç–∏–∫—Ç–æ–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ—Ç–∞–º"""
  
  async def ddl_cmd(self, app: Client, message: types.Message, args: str):
   
    """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ -ddl <link/replay>"""
    
    self._app = app
    
    reply = message.reply_to_message
    local = message.chat.id
    if args:
      link = args
    elif reply:
      if not reply.text:
        return await utils.answer(message, '‚ùå –í —Ä–µ–ø–ª–∞–µ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞')
      else:
        link = reply.text.html
    else:
      return await utils.answer(message, '‚ùå –ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ —Ä–µ–ø–ª–∞—è')
    
    if 'vm.tiktok.com' in link:
      await utils.answer(message, 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...')
        
      async with fsm.Conversation(app, "@downloader_tiktok_bot", True) as conv:
        await conv.ask(args)
        response = await conv.get_response()
        await message.delete()
        await app.send_video(local, str(response.video.file_id))
    elif 'youtube.com' in link:
      await utils.answer(message, 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...')
        
      async with fsm.Conversation(app, "@youtubednbot", True) as conv:
        await conv.ask(args)
        response = await conv.get_response()
        await message.delete()
        await app.send_video(local, str(response.video.file_id))
    else:
      return await utils.answer(message, '‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
