from asyncio import sleep

from aiogram.types import (
    InlineQuery,
    CallbackQuery,
    InlineQueryResultArticle,
    InputTextMessageContent,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)

from pyrogram import Client, types
from .. import loader, utils, inline

@loader.module(name="TEST", author="ecXbe")
class ExampleMod(loader.Module):
  
    """dsfa"""
  
    async def example_inline_handler(self, app: Client, inline_query: InlineQuery, args: str):  # _inline_handler на конце функции чтобы обозначить что это инлайн-команда
                                                                                            # args - аргументы после команды. необязательный аргумент
    """Пример инлайн-команды. Использование: @bot example [аргументы]"""
    await inline_query.answer(
        [
            InlineQueryResultArticle(
                id=inline.result_id(),
                title="Тайтл",
                description="Нажми на меня!" + (
                    f" Аргументы: {args}" if args
                    else ""
                ),
                input_message_content=InputTextMessageContent(
                    "Текст после нажатия на кнопку"),
                reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton("Текст кнопки", callback_data="example_button_callback"))
            )
        ]
    )

    @loader.on_bot(lambda self, app, call: call.data == "example_button_callback")  # Сработает только если каллбек дата равняется "example_button_callback"
    async def example_callback_handler(self, app: Client, call: CallbackQuery):  # _callback_handler на конце функции чтобы обозначить что это каллбек-хендлер
    """Пример каллбека"""
    return await call.answer(
        "Ого пример каллбека", show_alert=True)

  
    async def ghoul_inline_handler(self, app: Client, inline_query: InlineQuery, args: str):

        """Гуль"""
        local = message.chat.id
        await inline_query.answer(
            [
                InlineQueryResultArticle(
                    id=inline.result_id(),
                    title="Ghoul",
                    description="Запустить гуля" + (
                        f" Аргументы: {args}" if args
                        else ""
                    ),
                    input_message_content=InputTextMessageContent(
                        "Нажми на кнопочку"),
                    reply_markup=InlineKeyboardMarkup().add(
                        InlineKeyboardButton("Запустить гуля", callback_data="ghoul_button_callback"))
                )
            ]
        )

    @loader.on_bot(lambda self, app, call: call.data == "ghoul_button_callback")
    async def ghoul_callback_handler(self, app: Client, message: types.Message):

        """Я гуль множеством сообщений"""

        await utils.answer(message, 'Я гуль')
        await sleep(2)
        a = 1000
        while a > 0:
            c = a - 7
            await app.send_message(message.chat.id, str(a) + " - 7 = " + str(c))
            a = c
            await sleep(0.1)
        await app.send_message(message.chat.id, 'l l let me die')
